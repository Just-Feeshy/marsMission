// Generated by Haxe 4.3.1
#include <hxcpp.h>

namespace hx {
const char *__hxcpp_all_files[] = {
#ifdef HXCPP_DEBUGGER
"/usr/local/lib/haxe/std/cpp/_std/Std.hx",
"/usr/local/lib/haxe/std/cpp/_std/Sys.hx",
"/usr/local/lib/haxe/std/cpp/_std/haxe/Exception.hx",
"/usr/local/lib/haxe/std/cpp/_std/haxe/Log.hx",
"/usr/local/lib/haxe/std/cpp/_std/haxe/NativeStackTrace.hx",
"/usr/local/lib/haxe/std/cpp/_std/sys/FileSystem.hx",
"/usr/local/lib/haxe/std/cpp/_std/sys/io/File.hx",
"/usr/local/lib/haxe/std/cpp/_std/sys/io/FileInput.hx",
"/usr/local/lib/haxe/std/cpp/_std/sys/io/FileOutput.hx",
"/usr/local/lib/haxe/std/haxe/ValueException.hx",
"/usr/local/lib/haxe/std/haxe/ds/GenericStack.hx",
"/usr/local/lib/haxe/std/haxe/exceptions/NotImplementedException.hx",
"/usr/local/lib/haxe/std/haxe/exceptions/PosException.hx",
"/usr/local/lib/haxe/std/haxe/io/Bytes.hx",
"/usr/local/lib/haxe/std/haxe/io/BytesBuffer.hx",
"/usr/local/lib/haxe/std/haxe/io/Eof.hx",
"/usr/local/lib/haxe/std/haxe/io/Input.hx",
"/usr/local/lib/haxe/std/haxe/io/Output.hx",
"/usr/local/lib/haxe/std/haxe/io/Path.hx",
"/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx",
"?",
"Log.hx",
"Main.hx",
"Player.hx",
"WorldMap.hx",
"algorithm/AI.hx",
"algorithm/Node.hx",
"algorithm/PriorityQueue.hx",
"spinehaxe/MathUtils.hx",
#endif
 0 };

const char *__hxcpp_all_files_fullpath[] = {
#ifdef HXCPP_DEBUGGER
"/usr/local/lib/haxe/std/cpp/_std/Std.hx",
"/usr/local/lib/haxe/std/cpp/_std/Sys.hx",
"/usr/local/lib/haxe/std/cpp/_std/haxe/Exception.hx",
"/usr/local/lib/haxe/std/cpp/_std/haxe/Log.hx",
"/usr/local/lib/haxe/std/cpp/_std/haxe/NativeStackTrace.hx",
"/usr/local/lib/haxe/std/cpp/_std/sys/FileSystem.hx",
"/usr/local/lib/haxe/std/cpp/_std/sys/io/File.hx",
"/usr/local/lib/haxe/std/cpp/_std/sys/io/FileInput.hx",
"/usr/local/lib/haxe/std/cpp/_std/sys/io/FileOutput.hx",
"/usr/local/lib/haxe/std/haxe/ValueException.hx",
"/usr/local/lib/haxe/std/haxe/ds/GenericStack.hx",
"/usr/local/lib/haxe/std/haxe/exceptions/NotImplementedException.hx",
"/usr/local/lib/haxe/std/haxe/exceptions/PosException.hx",
"/usr/local/lib/haxe/std/haxe/io/Bytes.hx",
"/usr/local/lib/haxe/std/haxe/io/BytesBuffer.hx",
"/usr/local/lib/haxe/std/haxe/io/Eof.hx",
"/usr/local/lib/haxe/std/haxe/io/Input.hx",
"/usr/local/lib/haxe/std/haxe/io/Output.hx",
"/usr/local/lib/haxe/std/haxe/io/Path.hx",
"/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx",
"/Users/diegofonseca/Desktop/GitHub Repositories 2/marsMission/rover/?",
"/Users/diegofonseca/Desktop/GitHub Repositories 2/marsMission/rover/source/Log.hx",
"/Users/diegofonseca/Desktop/GitHub Repositories 2/marsMission/rover/source/Main.hx",
"/Users/diegofonseca/Desktop/GitHub Repositories 2/marsMission/rover/source/Player.hx",
"/Users/diegofonseca/Desktop/GitHub Repositories 2/marsMission/rover/source/WorldMap.hx",
"/Users/diegofonseca/Desktop/GitHub Repositories 2/marsMission/rover/source/algorithm/AI.hx",
"/Users/diegofonseca/Desktop/GitHub Repositories 2/marsMission/rover/source/algorithm/Node.hx",
"/Users/diegofonseca/Desktop/GitHub Repositories 2/marsMission/rover/source/algorithm/PriorityQueue.hx",
"/Users/diegofonseca/Haxe/spinehaxe/3,5,0/spinehaxe/MathUtils.hx",
#endif
 0 };

const char *__hxcpp_all_classes[] = {
#ifdef HXCPP_DEBUGGER
"Log",
"Main",
"Player",
"Std",
"Sys",
"WorldMap",
"algorithm.AI",
"algorithm.Node",
"haxe.ds.GenericStack_algorithm_Node",
"algorithm.PriorityQueue",
"haxe.Exception",
"haxe.Log",
"haxe.NativeStackTrace",
"haxe.ValueException",
"haxe.ds.GenericCell_algorithm_Node",
"haxe.ds.GenericCell",
"haxe.ds._GenericStack.GenericStackIterator",
"haxe.ds._GenericStack.GenericStackIterator_algorithm_Node",
"haxe.exceptions.PosException",
"haxe.exceptions.NotImplementedException",
"haxe.io.Bytes",
"haxe.io.BytesBuffer",
"haxe.io.Eof",
"haxe.io.Input",
"haxe.io.Output",
"haxe.io.Path",
"haxe.iterators.ArrayIterator",
"spinehaxe.MathUtils",
"sys.FileSystem",
"sys.io.File",
"sys.io.FileInput",
"sys.io.FileOutput",
#endif
 0 };
} // namespace hx
void __files__boot() { __hxcpp_set_debugger_info(::hx::__hxcpp_all_classes, ::hx::__hxcpp_all_files_fullpath); }
